/* ViewSetup.css
 * -------------
 * Copyright Â©2022 Jeremy Kelly
 * www.anthemion.org */

#ViewSetup {
	width: 30rem;
}

#ViewSetup section:focus-within {
	outline: var(--StyBtnOutFoc);
}

#ViewSetup section {
	margin-top: 0.5rem;
	border-radius: 0.25rem;
	padding: 0.5rem 1rem 0.75rem 1rem;

	background-color: var(--ColorSlideBack);
	box-shadow: 0 0 3px hsla(0, 0%, 0%, 0.5);
}

#ViewSetup label {
	font-family: var(--FontFamilySerif);
	font-weight: bold;
	font-size: 1.25rem;
}

#ViewSetup .Name {
	float: right;

	font-family: var(--FontFamilySerif);
	font-weight: bold;
	font-size: 1.25rem;
}

#ViewSetup .Instruct {
	font-size: 1.1rem;

	text-align: center;
}

#ViewSetup .Btns {
	margin-top: 0.75rem
}

/* Responsive layouts
 * ------------------ */

@media screen and (orientation: portrait) and (max-width: 30rem),
	screen and (orientation: landscape) and (max-height: 500px) {

	#ViewSetup {
		width: 100vw;
		min-height: 100vh;

		border: none;
		border-radius: 0;
	}

	#ViewSetup section {
		padding: 1rem 1rem 1.25rem 1rem;
	}

	#ViewSetup h1 {
		margin-bottom: 0.75rem;
	}

	#ViewSetup .Instruct {
		font-size: 0.9rem;
	}

	/* Button tray
	 * -----------
	 * In this layout, we will move the buttons to a 'tray' that is fixed to the
	 * bottom of the viewport. Keeping the buttons visible helps users understand
	 * what they should do next.
	 *
	 * In high-scoring games, the view will exceed the viewport height for desktop
	 * users as well, and the same problem will be faced. Moving the buttons to
	 * the bottom of a large display would make them less visible, however, so we
	 * will hope they scroll instead.
	 *
	 * I considered this for the other mobile layouts, but those never exceed the
	 * viewport height, and it would be even uglier there than it is here. */

	#ViewSetup #BtnsMain {
		--HeightTrayBtn: 4rem;

		position: fixed;
		left: 0;
		bottom: 0;
		width: 100%;
		height: var(--HeightTrayBtn);

		border-top: var(--StyViewBord);
		padding: 0.5rem;

		background-color: var(--ColorViewBack);
		box-shadow: 0 0 10px hsla(0, 0%, 0%, 0.5);
	}
}

@media screen and (orientation: portrait) and (max-width: 30rem) {

}

@media screen and (orientation: landscape) and (max-height: 500px) {
	#ViewSetup main {
		display: flex;
		gap: 0.5rem;
	}

	#ViewSetup section {
		flex: 1;

		margin: 0;
	}
}
