/* ViewPlay.css
 * ------------
 * Copyright Â©2022 Jeremy Kelly
 * www.anthemion.org */

#ViewPlay {
	/* The width and height of the board element. This will determine the size of
	 * the view as a whole. */
	--SizeBoard: 24rem;

	padding: 1.5rem;

	font-size: 1.1rem;
	/** It is easy to select by accident when using a touchscreen: */
	user-select: none;
}

#ViewPlay main {
	display: grid;
	grid-template-columns: auto 10rem;
	grid-template-rows: auto auto 1fr auto;
}

#ViewPlay #ColBoard {
	grid-column: 1;
	grid-row: 1 / span 4;

	margin-right: 1.5rem;
	border-right: 1px dashed var(--ColorRule);
	padding-right: 1.5rem;

	text-align: center;
}

#ViewPlay #BoxEnt {
	width: var(--SizeBoard);
	height: 3.5rem;

	margin-bottom: 0.5rem;

	display: flex;
	justify-content: space-between;
}

#ViewPlay #TextInstruct {
	align-self: start;

	padding-right: 1rem;

	text-align: left;
}

#ViewPlay #BtnHelp {
	align-self: center;
}

#ViewPlay #TextEnt {
	font-family: var(--FontFamilySerif);
	font-weight: bold;
	font-size: 2.5rem;
	line-height: 100%;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

#ViewPlay #TextEnt::after {
	content: "_";

	animation-name: BlinkCursTextEnt;
	animation-duration: 0.75s;
	animation-timing-function: steps(2, jump-none);
	animation-iteration-count: infinite;
}

@keyframes BlinkCursTextEnt {
	from { color: var(--ColorText); }
	to { color: transparent; }
}

#ViewPlay .LookBoard,
#ViewPlay #BoxWork {
	width: var(--SizeBoard);
	height: var(--SizeBoard);
}

#ViewPlay #BoxWork {
	/* We could do something fancy here, but it is visible just momentarily. */

	display: grid;
	place-items: center;

	border: 3px solid var(--ColorBoardBord);
	border-radius: 3.4%;
	padding: 1rem;

	background-color: var(--ColorBoardBack);

	font-family: var(--FontFamilySerif);
	font-weight: bold;
	font-size: 2rem;
	color: var(--ColorText);
}

#ViewPlay #TextCtls {
	width: var(--SizeBoard);

	margin-top: 0.5rem;
}

#ViewPlay #BoxTitle {
	grid-column: 2;
	grid-row: 1;

	margin-bottom: 0.75rem;
}

#ViewPlay #BoxTime {
	grid-column: 2;
	grid-row: 2;
}

#ViewPlay #BoxScore {
	grid-column: 2;
	grid-row: 4;
}

#ViewPlay #BoxTime,
#ViewPlay #BoxScore {
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	gap: 0.5rem;

	padding: 0;

	font-size: 1rem;
	text-align: center;
}

#ViewPlay #BtnPause,
#ViewPlay #BtnEnt {
	width: 100%;

	padding-top: 0.75rem;

	display: block;
}

#ViewPlay #BtnPause.Blink {
	animation-name: BlinkBtnPause;
	animation-duration: 0.5s;
	animation-timing-function: steps(2, jump-none);
	animation-timing-function: ease-in-out;
	animation-iteration-count: infinite;
}

@keyframes BlinkBtnPause {
	0% { color: var(--ColorTextBlink) }
	50% { color: var(--ColorText) }
	100% { color: var(--ColorText) }
}

#ViewPlay #LblTime,
#ViewPlay #LblScore {
	font-family: var(--FontFamilySerif);
	font-weight: bold;
	font-size: 2.5rem;
	line-height: 100%;
}

#ViewPlay #BoxSetup {
	grid-column: 2;
	grid-row: 3;

	display: flex;
	flex-direction: column;
	justify-content: center;

	text-align: center;
}

#ViewPlay #BoxSetup h3 {
	margin: 0;
	font-family: var(--FontFamilySerif);
	font-weight: normal;
	font-size: 1rem;
	line-height: 100%;
}

#ViewPlay #BoxSetup div {
	font-family: var(--FontFamilySerif);
	font-weight: bold;
	font-size: 1.75rem;
}

#ViewPlay #BoxSetup hr {
	margin: 1rem 0 0.5rem 0;
}

/* Pause dialog
 * ------------ */

#DlgPause p {
	margin: 0.5rem 1rem 1.25rem 1rem;
}

/* End Confirmation dialog
 * ----------------------- */

#DlgConfirmEnd p {
	margin: 0.5rem 1rem 1rem 1rem;
}

#DlgConfirmEnd .Btn {
	width: 100%;
}

/* Responsive layouts
 * ------------------ */

@media screen and (orientation: portrait) and (max-width: 700px) {
	#ViewPlay {
		--SizeBoard: clamp((360px - 4rem), (100vw - 4rem), 24rem);
	}

	#ViewPlay main {
		grid-template-columns: auto 1fr 1fr;
		grid-template-rows: auto auto;
	}

	#ViewPlay #ColBoard {
		grid-column: 1 / span 3;
		grid-row: 1;

		margin: 0 0 1.5rem 0;
		border: none;
		padding: 0;
	}

	#ViewPlay #BoxTitle {
		grid-column: 1;
		grid-row: 2;

		margin: 0;

		display: grid;
		place-content: center;

		margin: 0 1.25rem 0 0;
		border-right: 1px dashed var(--ColorRule);
		padding: 0 1.25rem 0 0;
	}

	#ViewPlay #BoxTitle h1 {
		writing-mode: vertical-rl;
		transform: rotate(180deg);

		margin: 0;

		line-height: 100%;
	}

	#ViewPlay #BoxTitle hr {
		display: none;
	}

	#ViewPlay #BoxTime {
		grid-column: 2;
		grid-row: 2;
	}

	#ViewPlay #BoxSetup {
		display: none;
	}

	#ViewPlay #BoxScore {
		grid-column: 3;
		grid-row: 2;

		margin: 0 0 0 1rem;
	}

	#ViewPlay .Desk {
		display: none;
	}

	#ViewPlay .Mob {
		display: block;
	}
}

@media screen and (orientation: portrait) and (max-width: 500px) {
	#ViewPlay {
		padding: 1rem;
	}

	#ViewPlay #TextInstruct {
		font-size: 95%;
	}

	#ViewPlay #BoxTime,
	#ViewPlay #BoxScore {
		font-size: 0.9rem;
	}

	#ViewPlay #BtnPause,
	#ViewPlay #BtnEnt {
		min-height: 6rem;

		font-size: 0.9rem;
	}

	#ViewPlay #LblTime,
	#ViewPlay #LblScore {
		font-size: 2rem;
	}
}

@media screen and (orientation: landscape) and (max-height: 700px) {
	#ViewPlay {
		--SizeBoard: clamp((360px - 4rem), (100vh - 6rem), 28rem);

		display: flex;
	}

	#ViewPlay .Desk {
		display: none;
	}

	#ViewPlay .Mob {
		display: block;
	}
}

@media screen and (orientation: landscape) and (max-height: 600px) {
	#ViewPlay main {
		display: grid;
		grid-template-columns: auto 10rem;
		grid-template-rows: auto auto 1fr auto;
	}

	#ViewPlay #ColBoard {
		display: flex;
		gap: 0.75rem;
	}

	#ViewPlay #BoxEnt {
		height: initial;
		width: 4rem;
		flex-direction: column-reverse;
		justify-content: space-between;
	}

	#ViewPlay #TextInstruct {
		flex: 1 1 0;

		writing-mode: vertical-rl;
		transform: rotate(180deg);

		padding: 0 0 1rem 0;
	}

	#ViewPlay #TextEnt {
		writing-mode: vertical-rl;
		transform: rotate(180deg);
	}

	#ViewPlay #BoxSetup {
		display: none;
	}
}

@media screen and (orientation: landscape) and (max-height: 500px) {
	/* The board is always square, and it is sized relative to the viewport
	 * height, so, when the right column can no longer be compressed, the form
	 * can't be made any shorter without causing the board to move away from the
	 * form side. Therefore, we must reduce the size of the right column boxes if
	 * we want to go shorter. */

	#ViewPlay main {
		grid-template-columns: auto 8rem;
	}

	#ViewPlay #TextInstruct {
		font-size: 95%;
	}

	#ViewPlay h1 {
		margin-bottom: 0.75rem;
	}

	#ViewPlay #BoxTime,
	#ViewPlay #BoxScore {
		font-size: 0.8rem;
	}

	#ViewPlay #BtnPause,
	#ViewPlay #BtnEnt {
		font-size: 0.8rem;
	}

	#ViewPlay #LblTime,
	#ViewPlay #LblScore {
		font-size: 2rem;
	}
}
