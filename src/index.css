/* index.css
// ---------
// Copyright Â©2022 Jeremy Kelly
// www.anthemion.org */

@import "~sanitize.css";
@import "~sanitize.css/typography.css";
@import "~sanitize.css/forms.css";

html {
	background-color: hsl(30, 4%, 16%);
	/* background-color: hsl(30, 4%, 20%); */

	/* Not in MacOS: [to do] */
	font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
}

#Root {
	height: 100vh;

	display: grid;
	place-items: center;
}

h1, h2, h3, h4, h5, h6 {
	font-family: Georgia, serif;
}

a {
	text-decoration: none;
}

hr {
	border: none;
	border-top: 1px dashed black;
}

ul {
	margin: 0.5rem 0;
}

li {
	margin: 0.5rem 1rem 0.5rem 0;
}

aside {
	font-size: 90%;
}

/* Tables
// ------ */

table {
	width: 100%;
}

thead {
	border-bottom: 1px solid hsl(0, 0%, 60%);
}

th {
	padding-bottom: 0.5rem;
}

/* 'thead', 'tbody', and 'tr' all lack padding, so there is otherwise no way to
// add space between the 'thead' border and the first body row. Don't add this
// spacing unless there actually is a heading, however: */
thead + tbody:before {
	content: "";
	display: table-row;
	height: 0.75rem;
}

th, td {
	text-align: center;
}

th:first-child,
td:first-child {
	padding-left: 0.5rem;
	text-align: left;
}

th:last-child,
td:last-child {
	padding-right: 0.5rem;
	text-align: right;
}

tbody tr:nth-child(odd) {
	/* Or:
	//
	//   background-color:  hsl(30, 50%, 98%);
	*/
	background-color:  hsl(30, 10%, 86%);
}

/* Buttons
// ------- */

button, input[type="submit"], a.Btn {
	background-color: hsl(0, 0%, 100%);
	padding: 0.5rem 1rem;
	border: 1px solid transparent;
	border-radius: 0.25rem;

	font-size: 1.1rem;
	/* Prevent text wrapping by default. This is useful when the containing dialog
	// (for instance #DlgConfirmEnd) has no explicit width. You might guess that
	// the button text would contribute to the dialog width, but instead, the
	// dialog width is set according to its text content, and then the buttons are
	// made to wrap their text to fit that width, unless this is set: */
	white-space: nowrap;

	box-shadow: 0 0 3px hsla(0, 0%, 0%, 0.5);
}

button:focus, input[type="submit"]:focus, a:focus.Btn {
	outline: none;
	border: 1px dashed #AAA;
}

button:disabled, input[type="submit"]:disabled, a:disabled.Btn {
	background-color: hsl(0, 0%, 85%);
}

button:hover, input[type="submit"]:hover, a:hover.Btn {
	background-color: hsl(0, 0%, 95%);
}

button:active, input[type="submit"]:active, a:active.Btn {
	background-color: hsl(0, 0%, 85%);
}

a.Btn {
	color: black;
}

/* Button rows
// ----------- */

.Btns {
	display: flex;
}

.Btns * {
	margin-left: 0.5rem;
}

.Btns *:first-child {
	margin-left: 0;
}

.Btns.Ctr {
	justify-content: center;
}

/* Each application of this class starts a new button group. */
.Btns *.Group {
	margin-left: auto;
}

/* Text inputs
// ----------- */

input {
	width: 100%;
	margin: 0.25rem 0 0.5rem 0;

	background-color: white;
	border: 1px solid hsl(0, 60%, 40%);

	font-family: Georgia, serif;
	font-size: 1.5rem;
	text-align: center;
}

input:focus {
	/* Use 'outline' here to thicken the border without shifting the layout: */
	outline: 1px solid hsl(0, 60%, 40%);
}

/* Range inputs
// ------------
// By default, and contrary to all common sense, range inputs don't change in
// value when the user clicks to one side of the thumb unless the click position
// is closer to another valid position than it is to the current position. Add
// click handler to inputs that derives new value from click position? [to do]
//
// Adapted from:
//
//   https://css-tricks.com/styling-cross-browser-compatible-range-inputs-css/
*/

input[type="range"] {
	/* This hides the original slider, but it also hides the tick marks:*/
	-webkit-appearance: none;
	width: 100%;
	background: transparent;
	/* So that the layout doesn't shift when the focus border is displayed: */
	border: 1px solid transparent;
	padding: 1rem;
	margin: 1rem 0;
}

input[type="range"]::-webkit-slider-thumb {
	-webkit-appearance: none;
}

input[type="range"]:focus {
	outline: none;
	border: 1px dashed #AAA;
}

input[type="range"]::-webkit-slider-thumb {
	-webkit-appearance: none;
	/* We want an odd number for Firefox, but Chrome makes the thumb one pixel
	// larger than the indicated size: */
	height: 10px;
	width: 10px;
	border: none;
	border-radius: 5.5px;
	background: black;
	cursor: pointer;
	margin-top: -4.5px;
}

input[type="range"]:hover::-webkit-slider-thumb {
	background: hsl(0, 60%, 40%);
}

input[type="range"]::-moz-range-thumb {
	/* Use an odd number so the thumb can be centered over the 1px track: */
	height: 11px;
	width: 11px;
	border: none;
	border-radius: 5.5px;
	background: black;
	cursor: pointer;
}

input[type="range"]:hover::-moz-range-thumb {
	background: hsl(0, 60%, 40%);
}

input[type="range"]::-webkit-slider-runnable-track {
	width: 100%;
	/* Sometimes Chrome renders this as 2px, other times 1px: */
	height: 1px;
	background: #AAA;
	cursor: pointer;
}

input[type="range"]:hover::-webkit-slider-runnable-track {
	background: hsl(0, 60%, 40%);
}

input[type="range"]::-moz-range-track {
	width: 100%;
	height: 1px;
	background: #AAA;
	cursor: pointer;
}

input[type="range"]:hover::-moz-range-track {
	background: hsl(0, 60%, 40%);
}

/* Dialogs
// ------- */

.ScreenDlg {
	z-index: 1;
	position: fixed;
	left: 0;
	top: 0;
	width: 100vw;
	height: 100vh;
	background-color: hsla(0, 0%, 0%, 0.4);

	display: grid;
	place-items: center;
}

.Dlg {
	border-radius: 0.5rem;
	padding: 1.25rem;
	background-color: hsl(0, 0%, 90%);
	box-shadow: 0 0 10px hsla(0, 0%, 0%, 0.7);

	font-size: 1.1rem;
	text-align: center;
}

/* Responsive
// ---------- */

.Mob {
	/* 'visibility: collapse' does not seem to work the way it should: */
	display: none;
}

/* Modifiers
// --------- */

.MargT2 {
	margin-top: 0.5em;
}

.MargT3 {
	margin-top: 0.75em;
}

.MargT4 {
	margin-top: 1em;
}

.MargT6 {
	margin-top: 1.5em;
}

.MargT8 {
	margin-top: 2em;
}

.MargV2 {
	margin-top: 0.5em;
	margin-bottom: 0.5em;
}

.MargV3 {
	margin-top: 0.75em;
	margin-bottom: 0.75em;
}

.MargV4 {
	margin-top: 1em;
	margin-bottom: 1em;
}

.MargV6 {
	margin-top: 1.5em;
	margin-bottom: 1.5em;
}

.MargV8 {
	margin-top: 2em;
	margin-bottom: 2em;
}

.Bold {
	font-weight: bold;
}

.Semibold {
	font-weight: 600;
}

.Caps {
	text-transform: uppercase;
}

.Left {
	text-align: left;
}

.Ctr {
	text-align: center;
}

.Right {
	text-align: right;
}

.SideUp {
	writing-mode: vertical-rl;
	transform: rotate(180deg);
}

.SideDown {
	writing-mode: vertical-rl;
}